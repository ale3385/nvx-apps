<?xml version="1.0"?>
<model xmlns="http://www.neeveresearch.com/schema/x-ddl"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <env>
        <nv>
            <!-- optimize for latency -->
            <optimizefor>latency</optimizefor>
            <aep.trace>info</aep.trace>

            <!-- global latency stats settings -->
            <msg.latency.stats>true</msg.latency.stats>
            <ods.latency.stats>true</ods.latency.stats>
            <latencymanager.samplesize>10240</latencymanager.samplesize>
        </nv>

        <!-- Configure the test drivers -->
        <driver.sendRate>1000</driver.sendRate>
        <driver.sendCount>1000</driver.sendCount>
        
        <cardmaster.numShards>2</cardmaster.numShards>
        <merchantmaster.numShards>2</merchantmaster.numShards>
        <cardholdermaster.numShards>2</cardholdermaster.numShards>
        <fraudanalyzer.numShards>2</fraudanalyzer.numShards>
    </env>

    <buses>
        <bus name="ccfd"
            descriptor="${CCFD_BUS_DESCRIPTOR::${SERVICE_BUS_CONNECTION_DESCRIPTOR::solace://192.168.1.9:55555&amp;use_default_queue_name=true&amp;SESSION_VPN_NAME=default&amp;SESSION_USERNAME=test&amp;usejni=true&amp;FLOW_FORWARDING_MODE=2}}">
            <channels>
                <channel name="authreq" id="1">
                    <qos>${CCFD_QOS::Guaranteed}</qos>
                    <key>${cardMasterShardId}</key>
                </channel>
                <channel name="authreq2" id="2">
                    <qos>${CCFD_QOS::Guaranteed}</qos>
                    <key>${merchantMasterShardId}</key>
                </channel>
                <channel name="authreq3" id="3">
                    <qos>${CCFD_QOS::Guaranteed}</qos>
                    <key>${cardholderMasterShardId}</key>
                </channel>
                <channel name="authreq4" id="4">
                    <qos>${CCFD_QOS::Guaranteed}</qos>
                    <key>${fraudanalyzerShardId}</key>
                </channel>
                <channel name="authresp" id="5">
                    <qos>${CCFD_QOS::Guaranteed}</qos>
                </channel>
            </channels>
        </bus>
    </buses>

    <apps>
        <!-- When XVM contain app of the same name, they will form replication cluster, so there will be one primary 
        and others will be backup instances.
         We will define each application twice with different names, so to support two partitions instead of starting backup instances-->
        <app name="cardholdermaster-1" mainClass="com.neeve.ccfd.cardholdermaster.Application" displayName="Cardholder Master">
            <captureTransactionLatencyStats>true
            </captureTransactionLatencyStats>
            <messaging>
                <factories>
                    <factory name="com.neeve.ccfd.messages.MessageFactory" />
                </factories>
                <bus name="ccfd">
                    <channels>
                        <channel name="authreq3" join="true">
                            <filter>cardholderMasterShardId=${CARDHOLDERMASTER_SHARDID::0}</filter>
                        </channel>
                        <channel name="authreq4" join="false" />
                    </channels>
                </bus>
            </messaging>
            <storage>
                <factories>
                    <factory
                        name="com.neeve.ccfd.cardholdermaster.state.StateFactory" />
                </factories>
                <clustering enabled="true">
                  <localIfAddr>${CARDHOLDERMASTER_STORE_ADDRESS::0.0.0.0}</localIfAddr>
                </clustering>
                <persistence enabled="true">
                    <!-- detached persist is not supported for state replication -->
                    <detachedPersist enabled="false" />
                </persistence>
            </storage>
            <inboundEventAcknowledgementPolicy>OnStoreStability</inboundEventAcknowledgementPolicy>
        </app>
        
        <app name="cardholdermaster-2" mainClass="com.neeve.ccfd.cardholdermaster.Application" displayName="Cardholder Master">
            <captureTransactionLatencyStats>true
            </captureTransactionLatencyStats>
            <messaging>
                <factories>
                    <factory name="com.neeve.ccfd.messages.MessageFactory" />
                </factories>
                <bus name="ccfd">
                    <channels>
                        <channel name="authreq3" join="true">
                            <filter>cardholderMasterShardId=${CARDHOLDERMASTER_SHARDID::1}</filter>
                        </channel>
                        <channel name="authreq4" join="false" />
                    </channels>
                </bus>
            </messaging>
            <storage>
                <factories>
                    <factory
                        name="com.neeve.ccfd.cardholdermaster.state.StateFactory" />
                </factories>
                <clustering enabled="true">
                  <localIfAddr>${CARDHOLDERMASTER_STORE_ADDRESS::0.0.0.0}</localIfAddr>
                </clustering>
                <persistence enabled="true">
                    <!-- detached persist is not supported for state replication -->
                    <detachedPersist enabled="false" />
                </persistence>
            </storage>
            <inboundEventAcknowledgementPolicy>OnStoreStability</inboundEventAcknowledgementPolicy>
        </app>

        <app name="cardmaster-1" mainClass="com.neeve.ccfd.cardmaster.Application" displayName="Card Master">
            <captureTransactionLatencyStats>true</captureTransactionLatencyStats>
            <messaging>
                <factories>
                    <factory name="com.neeve.ccfd.messages.MessageFactory"/>
                </factories>
                <bus name="ccfd">
                    <channels>
                        <channel name="authreq" join="true">
                            <filter>cardMasterShardId=${CARDMASTER_SHARDID::0}</filter>
                        </channel>
                        <channel name="authreq2" join="false"/>
                    </channels>
                </bus>
            </messaging>
            <storage>
                <factories>
                    <factory name="com.neeve.ccfd.cardmaster.state.StateFactory"/>
                </factories>
                <clustering enabled="true">
                  <localIfAddr>${CARDMASTER_STORE_ADDRESS::0.0.0.0}</localIfAddr>
                </clustering>
                <persistence enabled="true">
                    <!-- detached persist is not supported for state replication -->
                    <detachedPersist enabled="false"/>
                </persistence>
            </storage>
            <inboundEventAcknowledgementPolicy>OnStoreStability</inboundEventAcknowledgementPolicy>
        </app>

        <app name="cardmaster-2" mainClass="com.neeve.ccfd.cardmaster.Application" displayName="Card Master">
            <captureTransactionLatencyStats>true</captureTransactionLatencyStats>
            <messaging>
                <factories>
                    <factory name="com.neeve.ccfd.messages.MessageFactory"/>
                </factories>
                <bus name="ccfd">
                    <channels>
                        <channel name="authreq" join="true">
                            <filter>cardMasterShardId=${CARDMASTER_SHARDID::1}</filter>
                        </channel>
                        <channel name="authreq2" join="false"/>
                    </channels>
                </bus>
            </messaging>
            <storage>
                <factories>
                    <factory name="com.neeve.ccfd.cardmaster.state.StateFactory"/>
                </factories>
                <clustering enabled="true">
                  <localIfAddr>${CARDMASTER_STORE_ADDRESS::0.0.0.0}</localIfAddr>
                </clustering>
                <persistence enabled="true">
                    <!-- detached persist is not supported for state replication -->
                    <detachedPersist enabled="false"/>
                </persistence>
            </storage>
            <inboundEventAcknowledgementPolicy>OnStoreStability</inboundEventAcknowledgementPolicy>
        </app>

        <app name="fraudanalyzer-1" mainClass="com.neeve.ccfd.fraudanalyzer.Application" displayName="Fraud Analyzer">
            <captureTransactionLatencyStats>true</captureTransactionLatencyStats>
            <messaging>
                <factories>
                    <factory name="com.neeve.ccfd.messages.MessageFactory"/>
                </factories>
                <bus name="ccfd">
                    <channels>
                        <channel name="authreq4" join="true">
                            <filter>fraudanalyzerShardId=${FRAUDANALYZER_SHARDID::0}</filter>
                        </channel>
                        <channel name="authresp" join="false"/>
                    </channels>
                </bus>
            </messaging>
            <storage>
                <factories>
                    <factory name="com.neeve.ccfd.fraudanalyzer.state.StateFactory"/>
                </factories>
                <clustering enabled="true">
                  <localIfAddr>${FRAUDANALYZER_STORE_ADDRESS::0.0.0.0}</localIfAddr>
                </clustering>
                <persistence enabled="true">
                    <!-- detached persist is not supported for state replication -->
                    <detachedPersist enabled="false"/>
                </persistence>
            </storage>
            <inboundEventAcknowledgementPolicy>OnStoreStability</inboundEventAcknowledgementPolicy>
        </app>
        
        <app name="fraudanalyzer-2" mainClass="com.neeve.ccfd.fraudanalyzer.Application" displayName="Fraud Analyzer">
            <captureTransactionLatencyStats>true</captureTransactionLatencyStats>
            <messaging>
                <factories>
                    <factory name="com.neeve.ccfd.messages.MessageFactory"/>
                </factories>
                <bus name="ccfd">
                    <channels>
                        <channel name="authreq4" join="true">
                            <filter>fraudanalyzerShardId=${FRAUDANALYZER_SHARDID::1}</filter>
                        </channel>
                        <channel name="authresp" join="false"/>
                    </channels>
                </bus>
            </messaging>
            <storage>
                <factories>
                    <factory name="com.neeve.ccfd.fraudanalyzer.state.StateFactory"/>
                </factories>
                <clustering enabled="true">
                  <localIfAddr>${FRAUDANALYZER_STORE_ADDRESS::0.0.0.0}</localIfAddr>
                </clustering>
                <persistence enabled="true">
                    <!-- detached persist is not supported for state replication -->
                    <detachedPersist enabled="false"/>
                </persistence>
            </storage>
            <inboundEventAcknowledgementPolicy>OnStoreStability</inboundEventAcknowledgementPolicy>
        </app>
        
        <app name="merchantmaster-1" mainClass="com.neeve.ccfd.merchantmaster.Application" displayName="Merchant Master">
            <captureTransactionLatencyStats>true</captureTransactionLatencyStats>
            <messaging>
                <factories>
                    <factory name="com.neeve.ccfd.messages.MessageFactory"/>
                </factories>
                <bus name="ccfd">
                    <channels>
                        <channel name="authreq2" join="true">
                          <filter>merchantMasterShardId=${MERCHANTMASTER_SHARDID::0}</filter>
                        </channel>
                        <channel name="authreq3" join="false"/>
                    </channels>
                </bus>
            </messaging>
            <storage>
                <factories>
                    <factory name="com.neeve.ccfd.merchantmaster.state.StateFactory"/>
                </factories>
                <clustering enabled="true">
                  <localIfAddr>${MERCHANTMASTER_STORE_ADDRESS::0.0.0.0}</localIfAddr>
                </clustering>
                <persistence enabled="true">
                    <!-- detached persist is not supported for state replication -->
                    <detachedPersist enabled="false"/>
                </persistence>
            </storage>
            <inboundEventAcknowledgementPolicy>OnStoreStability</inboundEventAcknowledgementPolicy>
        </app>
        
        <app name="merchantmaster-2" mainClass="com.neeve.ccfd.merchantmaster.Application" displayName="Merchant Master">
            <captureTransactionLatencyStats>true</captureTransactionLatencyStats>
            <messaging>
                <factories>
                    <factory name="com.neeve.ccfd.messages.MessageFactory"/>
                </factories>
                <bus name="ccfd">
                    <channels>
                        <channel name="authreq2" join="true">
                          <filter>merchantMasterShardId=${MERCHANTMASTER_SHARDID::1}</filter>
                        </channel>
                        <channel name="authreq3" join="false"/>
                    </channels>
                </bus>
            </messaging>
            <storage>
                <factories>
                    <factory name="com.neeve.ccfd.merchantmaster.state.StateFactory"/>
                </factories>
                <clustering enabled="true">
                  <localIfAddr>${MERCHANTMASTER_STORE_ADDRESS::0.0.0.0}</localIfAddr>
                </clustering>
                <persistence enabled="true">
                    <!-- detached persist is not supported for state replication -->
                    <detachedPersist enabled="false"/>
                </persistence>
            </storage>
            <inboundEventAcknowledgementPolicy>OnStoreStability</inboundEventAcknowledgementPolicy>
        </app>
        
        <app name="perfdriver" mainClass="com.neeve.ccfd.perfdriver.Application">
            <captureTransactionLatencyStats>true</captureTransactionLatencyStats>
            <messaging>
                <factories>
                    <factory name="com.neeve.ccfd.messages.MessageFactory"/>
                </factories>
                <bus name="ccfd">
                    <channels>
                        <channel name="authreq" join="false"/>
                        <channel name="authreq2" join="false"/>
                        <channel name="authreq3" join="false"/>
                        <channel name="authresp" join="true"/>
                    </channels>
                </bus>
            </messaging>
            <sequenceUnsolicitedWithSolicitedSends>true</sequenceUnsolicitedWithSolicitedSends>
            <storage enabled="false"/>
        </app>
        
    </apps>

    <servers>
        <templates>
          <server name="server-template">       
              <autoStopOnLastAppStop>true</autoStopOnLastAppStop>   
              <heartbeats enabled="true" interval="5">
                  <collectIndividualThreadStats>true</collectIndividualThreadStats>
                  <includeMessageTypeStats>false</includeMessageTypeStats>
                  <tracing enabled="true">
                      <traceAdminClientStats>false</traceAdminClientStats>
                      <traceAppStats>false</traceAppStats>
                      <tracePoolStats>false</tracePoolStats>
                      <traceSysStats>false</traceSysStats>
                      <traceThreadStats>false</traceThreadStats>
                      <traceUserStats>true</traceUserStats>
                  </tracing>
              </heartbeats>
          </server>
        </templates>
        <server name="cardholdermaster-1-1" template="server-template" displayName="Cardholder Master 1p">
            <apps>
                <app name="cardholdermaster-1" autoStart="true" />
            </apps>
        </server>
        <server name="cardholdermaster-1-2" template="server-template" displayName="Cardholder Master 1s">
            <apps>
                <app name="cardholdermaster-1" autoStart="true" />
            </apps>       
        </server>
        <server name="cardholdermaster-2-1" template="server-template" displayName="Cardholder Master 2p">
            <apps>
                <app name="cardholdermaster-2" autoStart="true" />
            </apps>       
        </server>
        <server name="cardholdermaster-2-2" template="server-template" displayName="Cardholder Master 2s">
            <apps>
                <app name="cardholdermaster-2" autoStart="true" />
            </apps>       
        </server>
    
        <server name="cardmaster-1-1" template="server-template" displayName="Card Master 1p">
            <apps>
                <app name="cardmaster-1" autoStart="true"/>
            </apps>       
        </server>

        <server name="cardmaster-1-2" template="server-template" displayName="Card Master 1s">
            <apps>
                <app name="cardmaster-1" autoStart="true"/>
            </apps>       
        </server>
        
        <server name="cardmaster-2-1" template="server-template" displayName="Cardholder Master 2p">
            <apps>
                <app name="cardmaster-2" autoStart="true"/>
            </apps>       
        </server>

        <server name="cardmaster-2-2" template="server-template" displayName="Cardholder Master 2s">
            <apps>
                <app name="cardmaster-2" autoStart="true"/>
            </apps>       
        </server>

        <server name="fraudanalyzer-1-1" template="server-template" displayName="Fraud Analyzer 1p">
            <apps>
                <app name="fraudanalyzer-1" autoStart="true"/>
            </apps>       
        </server>
        <server name="fraudanalyzer-1-2" template="server-template" displayName="Fraud Analyzer 1s">
            <apps>
                <app name="fraudanalyzer-1" autoStart="true"/>
            </apps>       
        </server>
        <server name="fraudanalyzer-2-1" template="server-template" displayName="Fraud Analyzer 2p">
            <apps>
                <app name="fraudanalyzer-2" autoStart="true"/>
            </apps>       
        </server>
        <server name="fraudanalyzer-2-2" template="server-template" displayName="Fraud Analyzer 2s">
            <apps>
                <app name="fraudanalyzer-2" autoStart="true"/>
            </apps>       
        </server>
        
        <server name="merchantmaster-1-1" template="server-template" displayName="Merchant Master 1p">
            <apps>
                <app name="merchantmaster-1" autoStart="true"/>
            </apps>       
        </server>
        <server name="merchantmaster-1-2" template="server-template" displayName="Merchant Master 1s">
            <apps>
                <app name="merchantmaster-1" autoStart="true"/>
            </apps>       
        </server>
        <server name="merchantmaster-2-1" template="server-template" displayName="Merchant Master 2p">
            <apps>
                <app name="merchantmaster-2" autoStart="true"/>
            </apps>       
        </server>
        <server name="merchantmaster-2-2" template="server-template" displayName="Merchant Master 2s">
            <apps>
                <app name="merchantmaster-2" autoStart="true"/>
            </apps>       
        </server>
        
        <server name="perfdriver-1" template="server-template">
            <apps>
                <app name="perfdriver" autoStart="true"/>
            </apps>       
        </server>
        
    </servers>
</model>
